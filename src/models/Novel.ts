/* tslint:disable */
/* eslint-disable */
/**
 * webkansu-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Bookmark,
    BookmarkFromJSON,
    BookmarkFromJSONTyped,
    BookmarkToJSON,
    NovelProvider,
    NovelProviderFromJSON,
    NovelProviderFromJSONTyped,
    NovelProviderToJSON,
} from './';

/**
 * 
 * @export
 * @interface Novel
 */
export interface Novel {
    /**
     * 
     * @type {number}
     * @memberof Novel
     */
    id: number;
    /**
     * 小説のタイトル。
     * @type {string}
     * @memberof Novel
     */
    title: string;
    /**
     * 小説の著者名。
     * @type {string}
     * @memberof Novel
     */
    authorName: string;
    /**
     * 
     * @type {NovelProvider}
     * @memberof Novel
     */
    provider: NovelProvider;
    /**
     * `n0123ab` などのprovider のサービス内で、小説の URL を組み立てるための文字列。
     * @type {string}
     * @memberof Novel
     */
    slug: string;
    /**
     * 
     * @type {Bookmark}
     * @memberof Novel
     */
    bookmark?: Bookmark;
}

export function NovelFromJSON(json: any): Novel {
    return NovelFromJSONTyped(json, false);
}

export function NovelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Novel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'authorName': json['author_name'],
        'provider': NovelProviderFromJSON(json['provider']),
        'slug': json['slug'],
        'bookmark': !exists(json, 'bookmark') ? undefined : BookmarkFromJSON(json['bookmark']),
    };
}

export function NovelToJSON(value?: Novel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'author_name': value.authorName,
        'provider': NovelProviderToJSON(value.provider),
        'slug': value.slug,
        'bookmark': BookmarkToJSON(value.bookmark),
    };
}


